name: "Build docker image"

on:
  push:
    branches:
      - '**'

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

  release:
    types:
      - released
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Nix
      uses: cachix/install-nix-action@v20

    - name: Cache Nix store
      uses: actions/cache@v3
      with:
        path: /nix/store
        key: ${{ runner.os }}-nix-${{ hashFiles('flake.nix', 'flake.lock') }}
        restore-keys: |
          ${{ runner.os }}-nix-${{ hashFiles('flake.nix', 'flake.lock') }}
          ${{ runner.os }}-nix

    - name: Build everything
      run: |
        nix build

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      if: github.ref == 'refs/heads/main'
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build docker image
      run: |
        nix build .#docker --option sandbox relaxed -L
        docker load < result
      if: |
        github.ref == 'refs/heads/main' ||
        github.event_name == 'pull_request' ||
        github.event_name == 'release'

    - name: Push image tag
      if: |
        github.ref == 'refs/heads/main' ||
        github.event_name == 'pull_request' ||
        github.event_name == 'release'
      run: |
        docker tag banana-split ghcr.io/ludat/banana-split:${{ github.sha }}
        docker push ghcr.io/ludat/banana-split:${{ github.sha }}

    - name: Push release tag
      if: github.event_name == 'release'
      run: |
        docker tag banana-split ghcr.io/ludat/banana-split:${{ github.event.release.tag_name }}
        docker push ghcr.io/ludat/banana-split:${{ github.event.release.tag_name }}

    - name: Push latest tag
      if: github.ref == 'refs/heads/main'
      run: |
          docker tag banana-split ghcr.io/ludat/banana-split:latest
          docker push ghcr.io/ludat/banana-split:latest

    - name: Trigger infra-cluster deploy
      # https://gitlab.com/10Pines/infra/infra-cluster
      # Infra cluster project id = 32472203
      if: github.ref == 'refs/heads/main'
      run: |
        curl --request POST \
          --form "variables[ENV]=prod" \
          --form "variables[APP]=banana-split" \
          --form "variables[HELM_VALUES]=revision: '${{ github.sha }}'" \
          "https://gitlab.com/api/v4/projects/32472203/trigger/pipeline?token=${{ secrets.GITLAB_INFRA_TOKEN }}&ref=main"
